// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.KOTLIN_V = '1.7.21'
    ext.KOTLIN_CR_V = '1.6.4'
    ext.dep_junit4 = "junit:junit:4.13"
    // get latest commit
    ext.COMMIT = { ->
        def out = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', 'HEAD'
            standardOutput = out
        }
        out.toString().take(7).trim()
    }.call()
    ext.VERSION = { ->
        File f = new File(projectDir, "build.tmp.version")
        println "trying to read version from ${f.getCanonicalPath()}"
        if (f.exists()) {
            f.readLines().get(0)
        } else
            "version not provided"
    }.call()
    println "commit=${ext.COMMIT} version=\"${ext.VERSION}\""
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://maven.google.com"
        }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_V"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$KOTLIN_V"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
plugins {
    // this builds the jars
//    id 'org.springframework.boot' version '2.6.6'
    id 'org.springframework.boot' version '2.6.6'
}



project.ext {
    System.out.println("building with Kotlin version: $KOTLIN_V")
    javaFxVersion = "18.0.1"
    javaFxModules = ['javafx.controls', 'javafx.fxml', 'javafx.swing', 'javafx.web']
    dep_bc_pkix = 'org.bouncycastle:bcpkix-jdk15on:1.70'
    dep_bc_prov = 'org.bouncycastle:bcprov-jdk15on:1.70'
    dep_jdeferred = 'org.jdeferred:jdeferred-core:1.2.6'
    dep_junit4 = 'junit:junit:4.13'
    dep_jupiter = 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    dep_k_std =  'org.jetbrains.kotlin:kotlin-stdlib:1.7.21'
    dep_k_cor = 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    dep_sqlite = 'org.xerial:sqlite-jdbc:3.36.0.3'
}

def dep_strings = project.properties.findAll{ k,v -> k.startsWith('dep_')}
println 'These are the used dependency variables and their values:'
dep_strings.each{ k,v->
    println "   $k -> $v"
}


allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


